# docker-compose.yml - КОНФИГУРАЦИЯ ДЛЯ NGINX
version: '3.8'

services:
  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3100:3100"  # nginx проксирует на этот порт
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=https://kartofan.online/api
      - REACT_APP_MINIO_URL=https://kartofan.online/media
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
    networks:
      - portfolio-network
    restart: unless-stopped

  # Backend (Express)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8100:8100"  # nginx проксирует /api/* на этот порт
    depends_on:
      - minio
    environment:
      - NODE_ENV=production
      - PORT=8100
      - API_PORT=8100
      - CORS_ORIGIN=https://kartofan.online
      - FRONTEND_URL=https://kartofan.online
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_USE_SSL=false
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
      - MINIO_PUBLIC_URL=https://kartofan.online/media
    volumes:
      - ./backend/src:/app/src
      - ./backend/data:/app/data
    networks:
      - portfolio-network
    restart: unless-stopped

  # MinIO (File Storage)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"   # nginx проксирует /media/* на этот порт
      - "9001:9001"   # админка MinIO (опционально)
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
      # CORS настройки для работы с nginx
      - MINIO_API_CORS_ALLOW_ORIGIN=https://kartofan.online
      - MINIO_BROWSER_REDIRECT_URL=https://kartofan.online:9001
    volumes:
      - ./minio/data:/data
      - ./minio/config:/root/.minio
    command: server /data --console-address ":9001" --address ":9000"
    networks:
      - portfolio-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Optional: Database backup service
  backup:
    image: alpine:latest
    volumes:
      - ./backup:/backup
      - ./backend/data:/data
    command: |
      sh -c "
        while true; do
          tar -czf /backup/db_backup_$(date +%Y%m%d_%H%M%S).tar.gz -C /data .
          find /backup -name '*.tar.gz' -mtime +7 -delete
          sleep 86400
        done
      "
    depends_on:
      - backend
    networks:
      - portfolio-network

networks:
  portfolio-network:
    driver: bridge

volumes:
  minio_data:
  backend_data: